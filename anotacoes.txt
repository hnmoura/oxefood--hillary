A anota√ß√£o `@Column` em JPA √© bastante vers√°til e pode ser configurada com diferentes atributos para atender √†s necessidades espec√≠ficas de seu modelo de dados. Aqui est√° uma lista com os atributos mais usados da anota√ß√£o `@Column` e suas descri√ß√µes:
-Entidade basica de estrutura, colocada assima dos atributos que √© anota√ß√£o JPA -k@Column
Atributos de @Column

nullable
Define se a coluna pode aceitar valores null.
Exemplo: @Column(nullable = false) ‚Üí valor obrigat√≥rio.

length
Define o tamanho m√°ximo de caracteres (usado com String).
Exemplo: @Column(length = 255) ‚Üí at√© 255 caracteres.

precision
Usado com tipos num√©ricos (BigDecimal), define o n√∫mero total de d√≠gitos.
Exemplo: @Column(precision = 10) ‚Üí at√© 10 d√≠gitos.

scale
Define o n√∫mero de casas decimais para BigDecimal.
Exemplo: @Column(precision = 10, scale = 2) ‚Üí 8 inteiros + 2 decimais.

unique
Garante que os valores da coluna sejam √∫nicos no banco.
Exemplo: @Column(unique = true) ‚Üí usado para CPF, e-mail, etc.

insertable
Define se a coluna entra na instru√ß√£o INSERT.
Exemplo: @Column(insertable = false) ‚Üí campo preenchido pelo banco.

updatable
Define se a coluna pode ser alterada depois da inser√ß√£o.
Exemplo: @Column(updatable = false) ‚Üí usado para data de cria√ß√£o.

name
Especifica o nome da coluna no banco (se diferente do atributo).
Exemplo: @Column(name = "nome_cliente")

columnDefinition
Permite definir o tipo SQL da coluna manualmente.
Exemplo: @Column(columnDefinition = "TEXT")

table
Associa a coluna a uma tabela espec√≠fica (muito raro de usar).
Exemplo: @Column(table = "dados_pessoais")

üîπ Anota√ß√µes JPA e Lombok
@Entity
Indica que a classe √© uma entidade JPA ‚Äî ser√° mapeada como uma tabela no banco de dados.

@Where (equivale √† sua cita√ß√£o @SQLRestriction)
Adiciona uma condi√ß√£o SQL autom√°tica para todas as consultas da entidade.
Exemplo: @Where(clause = "ativo = true") ‚Üí retorna apenas registros ativos.

@Builder
Cria o padr√£o de constru√ß√£o fluente para objetos.
Exemplo: Paciente.builder().nome("Jo√£o").cpf("123").build();

@Setter e @Getter
Geram automaticamente os m√©todos set e get para todos os atributos da classe.

@AllArgsConstructor
Cria um construtor com todos os atributos da classe.

@NoArgsConstructor
Cria um construtor vazio, exigido pelo JPA para instanciar entidades

@JsonIgnore	
Jackson	Oculta campo na convers√£o Java ‚Üî JSON

@MappedSuperclass	
JPA	Define superclasse com atributos reutiliz√°veis

@GeneratedValue
JPA	Define como o valor da @Id ser√° gerado



Aqui est√° como voc√™ poderia usar esses atributos em uma classe de entidade:

```java
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Column;

@Entity
public class ExemploEntidade {

    @Id (Marca o campo chave prim√°ria.)
    private Long id;

    @Column(nullable = false, length = 100, unique = true)
    private String nome;

    @Column(precision = 10, scale = 2)
    private BigDecimal valor;

    @Column(insertable = false, updatable = false)
    private String status;

    @Column(name = "data_criacao", columnDefinition = "TIMESTAMP DEFAULT CURRENT_TIMESTAMP")
    private LocalDateTime dataCriacao;


    @Column(nullable = false, length = 11, unique = true)
    private String cpf; // CPF √© geralmente armazenado como uma string com 11 caracteres

    @Column(nullable = true, length = 15)
    private String telefone; // Telefone pode variar em formato, ent√£o 15 √© um tamanho razo√°vel


    // Getters e setters
    // ...
}
```


Neste exemplo, cada atributo da anota√ß√£o `@Column` √© utilizado para definir caracter√≠sticas espec√≠ficas das colunas da tabela no banco de dados.

- - - - - - 
Fazem o mapeamento entre entidades.

@OneToOne	Um para Um	Um paciente tem um prontu√°rio

@OneToMany	Um para Muitos	Um m√©dico tem muitas consultas

@ManyToOne	Muitos para Um	Muitas consultas t√™m um m√©dico

@ManyToMany	Muitos para Muitos	Um aluno pode ter muitas disciplinas e vice-versa


Tabela de Relacionamentos ‚Äì Obrigatoriedade e Cardinalidade
Nota√ß√£o	Nome do Relacionamento	    Obrigatoriedade	       Quantidade	                Exemplo
0..1	Opcional e √∫nico	         N√£o obrigat√≥rio	   No m√°ximo 1    	Aluno pode ter um est√°gio
1..1	Obrigat√≥rio e √∫nico	         Obrigat√≥rio	       Exatamente 1	    Funcion√°rio deve ter 1 crach√°
0..*	Opcional e m√∫ltiplo	         N√£o obrigat√≥rio	     V√°rios	     M√©dico pode atender v√°rios pacientes
1..*	Obrigat√≥rio e m√∫ltiplo	O    brigat√≥rio	            1 ou mais	 Pedido deve ter pelo menos 1 item
D  E

D_direito / E_esquerdo